<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox_Formula.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABfAPADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6iFzCW2iVC2cYDDNPf7rfSvnX9l34JeAbr4VeCPFc3hDR5f
        ExhF4dWktFa5M/mMfMMhGd2ec5pJ62Ez6Morx79oT4x6/wDCm9+H+n+G9I03XdU8W6/FoUVpfXLwGPcj
        yNcZVWykaxsWGM4IxUnwY+ON58RPHPxD8D65osOk+J/BFzaw3slhcm5s7mO4i82GSJyqsDtBDIwyp7nN
        Ne9e3T/gf5ob0tf+t/8AJnrtNeRY13OwVfVjgU6sbxb4N0Lx5oz6T4i0m01vTHdZGtL6ISxllOVJU8ZB
        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
</value>
  </data>
</root>