TY7868
RESET
//-----------------------------------------------------------------------------------------------
// page 01
//-----------------------------------------------------------------------------------------------
// sensor AE module = ON(1)/OFF(0)
// @ 0x10[0]
// sensor pixel format = 8bit(1)/10bit(0)
// @ 0x10[4]
W 01 10 00

// sensor normal frame burst length = N frame
// @ 0x11[7:0]
W 01 11 00

// AE frame sub-sampling = full_sz(0)/sub_2x2(1)/sub_4x4(2)
// @ 0x12[1:0]
// AE frame V binning X2 = ON(1)/OFF(0)
// @ 0x12[1]
//W 01 12 06

// SPI read out pixel format = 8bit(1)/10bit(0)
// @ 0x13[0]
// SPI read out mode = high-speed(1)/low-speed(0)
// @ 0x13[1]
W 01 13 00

// test pattern = ON(1)/OFF(0)
// @ 0x40[0]
// foot packet = ON(1)/OFF(0)
// @ 0x40[1]
//W 01 40 00

// normal frame window size are fixed at 184x184 by metal option
// normal frame window size (184x184 start from (16,16))
//W 01 26 10
//W 01 27 B8
//W 01 28 10
//W 01 29 B8

//-----------------------------------------------------------------------------------------------
// page 02
//-----------------------------------------------------------------------------------------------

// timing fix

// reg_fm_tim_cir_rst(PH0) = 237
W 02 10 00
W 02 11 ED

// reg_fm_tim_adc4sig(PH2) = 664
W 02 14 02
W 02 15 98

// reg_fm_tim_datxfer(PH3) = 96
W 02 17 60

// reg_grst_rst_ph0_t0 = 205
W 02 20 00
W 02 21 CD

// reg_gtx_ph0_t1 = 201
W 02 24 00
W 02 25 C9

// reg_gfd_rst_ph0_t0 = 205
W 02 2A 00
W 02 2B CD

// reg_gtx_rst_ph0_t1 = 197
W 02 34 00
W 02 35 C5

// reg_rst_reset_ph0_t0 = 205
W 02 3A 00
W 02 3B CD

// reg_comp_rst2_ph0_t0 = 217
W 02 3C 00
W 02 3D D9

// reg_comp_rst3_ph0_t0 = 229
W 02 3E 00
W 02 3F E5

// reg_ramp_rst_ini_ph0_t0 = 50
W 02 40 00
W 02 41 32

// reg_ramp_rst_1_ph0_t0 = 61
W 02 42 00 
W 02 43 3D

// reg_ramp_rst_2_ph0_t0 = 51
W 02 44 00
W 02 45 33

// reg_gtx_ph3_t0 = 56
W 02 27 38

// reg_gtx_ph3_t1 = 92
W 02 29 5C

// reg_gfd_rst_ph3_t1 = 52
W 02 2F 34

// reg_gtx_rst_ph3_t1 = 48
W 02 39 30

// reg_ramp_rst_2_ph2_t1 = 132
W 02 48 00
W 02 49 84

// reg_tx_read_en_ph2_t0 = 140
W 02 50 00
W 02 51 8C

// reg_tx_read_en_ph2_t1 = 124
W 02 52 00
W 02 53 7C

//-----------------------------------------------------------------------------------------------
// page 03
//-----------------------------------------------------------------------------------------------

// timing fix

// reg_adc_val_ph0_t0 = 51
W 03 30 00
W 03 31 33

// reg_vcm_gen_ph0_t0 = 49
W 03 50 00
W 03 51 31

// reg_vcm_sh_ph0_t0 = 48
W 03 52 00
W 03 53 30

// reg_vcm_sh2_ph0_t0 = 231
W 03 56 00
W 03 57 E7

// reg_comp_out_en_ph2_t0 = 216
W 03 14 00
W 03 15 D8

// reg_comp_out_en_ph2_t1 = 640
W 03 16 02
W 03 17 80

// reg_dout_en_ph2_t0 = 224
W 03 1C 00
W 03 1D E0

// reg_dout_en_ph2_t1 = 648
W 03 1E 02
W 03 1F 88

// reg_dac_en_ph2_str = 236
W 03 24 00
W 03 25 EC

// reg_adc_ofst_en_ph2_t0 = 132
W 03 2A 00
W 03 2B 84

// reg_adc_ofst_en_ph2_t1 = 652
W 03 2C 02
W 03 2D 8C

// reg_dsft_sig_ph2_t0 = 656
W 03 42 02
W 03 43 90

// reg_adc_val_ph2_t0 = 138
W 03 36 00
W 03 37 8A

// reg_adc_val_ph2_t1 = 652
W 03 38 02
W 03 39 8C

//-----------------------------------------------------------------------------------------------
// page 06
//-----------------------------------------------------------------------------------------------
// AVDD_PIX = 2.53V
W 06 30 10 

// low noise
W 06 31 08
W 06 33 1F
W 06 34 03


//-----------------------------------------------------------------------------------------------
// page 00
//-----------------------------------------------------------------------------------------------
// ADC offset for signal
//W 00 12 44

// expo_intg_max = 360(0x168)
// @ {0x0A[7:0],0x0B[7:0]}
W 00 0A 03
W 00 0B FF

// expo_intg (<expo_intg_max)
// @ {0x0C[7:0],0x0D[7:0]}
W 00 0C 00
W 00 0D 10

// kick start
//W 00 01 01

